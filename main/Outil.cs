using System.Security.AccessControl;

public abstract class Outil : ObjetJeuAchatVente
{
    public static List<Outil> ListeOutils = new List<Outil>
    {
        new Arrosoir(),
        new Panier(),
        new Secateur(),
        new CD(),
        new Fumier(),
        new Traitement(),
        new Coccinelle(),
        new FermierEnColere(),
        new Serre(),
        new IrrigationUrgente(),
        new Paillage()
    };
    public string MessageInitial { get; set; }
    public string MessageSucces { get; protected set; }
    public string MessageEchec { get; protected set; }
    public string Verbe { get; set; }
    public bool UsageUrgence { get; set; }
    public abstract bool Actionner(Parcelle parcelle);


    protected Outil(string nom, string emoji, int decallageAffichage, string verbe, string messageInitial, string messageSucces, string messageEchec, bool usageUrgence = false) : base(nom, emoji, decallageAffichage)
    {

        Verbe = verbe;
        UsageUrgence = usageUrgence;
        MessageInitial = messageInitial;
        MessageSucces = messageSucces;
        MessageEchec = messageEchec;
        
    }
}
public class Arrosoir : Outil
{
    public Arrosoir() : base("Arrosoir", "üí¶",0, "arroser","Choisissez une parcelle √† arroser !", "Plante arros√©e !","Vous ne pouvez pas arroser ici !") { }
    public override bool Actionner(Parcelle parcelle)
    {
        //si dessous besoineau , augmente l'hydratation de +15%
        //si au dessus besoineau , attention plante surhydrat√© et sant√© -20
        parcelle.Sol.Arroser(15);
        return true;
    }
}

public class Panier : Outil
{
    public Panier() : base("Panier", "üß∫", 0, "ramasser vos r√©coltes", "Choisissez une parcelle √† r√©colter !", "R√©colte(s) ajout√©e(s) √† votre inventaire !"
, "Aucune r√©colte disponible sur cette parcelle !")
    { }
    public override bool Actionner(Parcelle parceller)
    {
        //permet de r√©colter des fruits et de les ajouter dans l"inventaire d'un joueur
        //
        //si pas fruit, ne sert √† rien
        //List<Recolte>Parcelle.Plant.RamasserRecoltes();
        // sinon, ne fait rien
        return true;
    }
}
public class Pioche : Outil
{
    public Pioche() : base(
        "Pioche",
        "‚õèÔ∏è",
        0,
        "creuser",
        "Choisissez une parcelle √† travailler avec la pioche !",
        "Sol travaill√©, drainage am√©lior√© ou cailloux retir√©s !",
        "Impossible d'utiliser la pioche ici !"
    )
    {
    }

    public override bool Actionner(Parcelle parcelle)
    {
        // Exemple d'effet : am√©liore le drainage ou enl√®ve les cailloux
        // √Ä adapter selon ta logique de jeu
        if (parcelle.Plant.Type != "plante vide")
        {
            parcelle.DeterrerPlante();
        }
        return true;
    }
}
public class Secateur : Outil
{
    public Secateur() : base("Secateur", "ü™ì", 1, "tailler", "Choisissez une parcelle √† tailler !", "Plante taill√©e avec succ√®s !", "Impossible de tailler ici !"
)
    {
    }
    public override bool Actionner(Parcelle parcelle)
    {
        //si prend trop de place , tailler et cases -2
        //si chenille , tailler et chenille -1
        //sinon, abime la plante et sant√© -15
        if (parcelle.Plant.Espace > 6)
        {
            parcelle.Plant.Espace -= 2;
        }
        else if (parcelle.NuisiblesActuels.Contains("Chenille"))
        {
            parcelle.NuisiblesActuels.Remove("Chenille");
        }
        else
        {
            parcelle.Plant.Sante -= 15;
        }

        return true;
    }
}

public class CD : Outil
{
    public CD() : base("CD", "üíø", 0,"installer votre CD","Choisissez une parcelle √† prot√©ger avec un CD !","CD install√©, les nuisibles sont repouss√©s !","Aucun effet, les nuisibles ne sont pas concern√©s !"
    )
    {

    }
    public override bool Actionner(Parcelle parcelle)
    {
        //si oiseau, cd et oiseau -1
        //si chenille, cd et chenille -1
        //sinon , sert de d√©co mais inutile
        if (parcelle.NuisiblesActuels.Contains("Oiseau"))
        {
            parcelle.NuisiblesActuels.Remove("Oiseau");
        }
        else if (parcelle.NuisiblesActuels.Contains("Chenille"))
        {
            parcelle.NuisiblesActuels.Remove("Chenille");
        }
        // sinon, d√©coration uniquement
        return true;
    }
}

public class Fumier : Outil
{
    public Fumier() : base("Fumier", "üí©", 0,"mettre du fumier","Choisissez une parcelle √† fertiliser !","Fumier ajout√©, croissance boost√©e !","Impossible de fertiliser ici !"
)
    {
    }
    public override bool Actionner(Parcelle parcelle)
    {
        //engrais naturel donc booste la croissance des plantes de +2
        //si trop, √ßa pue et sant√© -15
        //si gel, prot√®ge du gel
        parcelle.Plant.VitesseCroissance += 2;

        if (parcelle.Plant.VitesseCroissance > 10) // valeur seuil √† adapter
        {
            parcelle.Plant.Sante -= 15;
        }

        if (parcelle.Plant.Etat == "gel√©")
        {
            // Prot√®ge du gel : rien √† faire ici car c‚Äôest une immunit√© 
        }
        return true;
    }
}

public class Traitement : Outil
{
    public Traitement() : base("Traitement", "üß™",0,"traiter","Choisissez une parcelle √† traiter !","Traitement appliqu√©, nuisible(s) √©limin√©(s) !","Aucun nuisible √† traiter sur cette parcelle !"
)
    {
    }
    public override bool Actionner(Parcelle parcelle)
    {
        //si maladies , traitement => maladie-1
        //si champignon , traitement => champi-1
        //sinon , trop de chimie => sant√© -20
        if (parcelle.NuisiblesActuels.Contains("Maladie"))
        {
            parcelle.NuisiblesActuels.Remove("Maladie");
        }
        else if (parcelle.NuisiblesActuels.Contains("Champignon"))
        {
            parcelle.NuisiblesActuels.Remove("Champignon");
        }
        else
        {
            parcelle.Plant.Sante -= 20;
        }
        return true;
    }
}

public class Coccinelle : Outil
{
    public Coccinelle() : base("Coccinnelle", "üêû",0, "d√©poser vos coccinelles","Choisissez une parcelle √† d√©poser des coccinelles !","Coccinelles d√©pos√©es, les pucerons sont √©limin√©s !","Aucun puceron √† √©liminer ici !"
)
    {
    }
    public override bool Actionner(Parcelle parcelle)
    {
        //si pucerons, coccinelle => pucerons -1
        //sinon , fait joli
        if (parcelle.NuisiblesActuels.Contains("Pucerons"))
        {
            parcelle.NuisiblesActuels.Remove("Pucerons");
        }
        // sinon, jolie d√©coration
        return true;
    }
}

public class FermierEnColere : Outil
{
    public FermierEnColere() : base("Fermier en col√®re", "ü§¨",0, "faire peur","Choisissez une parcelle √† surveiller !","Nuisible effray√© ou plante renforc√©e !","Aucun effet, aucun nuisible concern√© !"
)
    {

    }
    public override bool Actionner(Parcelle parcelle)
    {
        //si oiseaux, => oiseau-1
        //si lapin, => lapin-1
        //sinon , sert de pr√©vention et sant√© =+10
        if (parcelle.NuisiblesActuels.Contains("Oiseau"))
        {
            parcelle.NuisiblesActuels.Remove("Oiseau");
        }
        else if (parcelle.NuisiblesActuels.Contains("Lapin"))
        {
            parcelle.NuisiblesActuels.Remove("Lapin");
        }
        else
        {
            parcelle.Plant.Sante += 10;
        }
        return true;
    }
}

public class Serre : Outil
{
    public Serre() : base("Serre", "‚õ∫Ô∏è",0, "prot√©ger vos r√©coltes","Choisissez une parcelle √† prot√©ger avec une serre !","Serre install√©e, la plante est prot√©g√©e !"

,"Impossible d‚Äôinstaller une serre ici !"
)
    {
    }
    public override bool Actionner(Parcelle parcelle)
    {
        //si gel,prot√®ge du gel : OUTIL URGENCE
        //si oiseau, oiseau-1
        //si pluis, quantit√©eau ne bouge pas
        //augmente la temperature de +5 degr√©
        if (parcelle.Plant.Etat == "gel√©")
        {
            // Prot√®ge : rien √† faire
        }
        
        // Emp√™che la pluie d'agir
        // --> √Ä g√©rer dans la m√©t√©o, via une v√©rification de pr√©sence de serre
        // Augmente la temp√©rature
        //meteo.Temperature += 5;
        return true;
    }
}

public class IrrigationUrgente : Outil
{
    public IrrigationUrgente() : base("Irrigation d'urgence", "üöø",0, "attention","Choisissez une parcelle √† irriguer en urgence !","Irrigation d'urgence effectu√©e !","Aucune plante en situation critique ici !"
)
    {
    }
    public override bool Actionner(Parcelle parcelle)
    {
        if (parcelle.Plant.Etat == "s√®cheresse")
        {
            // sauve les plantes mais sante -10
            parcelle.Plant.Sante -= 10;
        }
        else
        {
            //inonde les plantations 
            parcelle.Plant.Sante -= 25;
        }
        return true;
    }
}

public class Paillage : Outil
{
    public Paillage() : base("Paillage", "üçÇ", 0, "attention","Choisissez une parcelle √† pailler !","Paillage appliqu√©, la plante est prot√©g√©e !","Impossible de pailler ici !"
)
    {
        
    }
    public override bool Actionner(Parcelle parcelle)
    {
        //permet de limiter les maladies : A CODER
        //si trop d'eau, paille absorbe : A CODER
        if (parcelle.Plant.Etat == "s√®cheresse")
        {
            // sauve les plantes mais sante -5
            parcelle.Plant.Sante -= 5;
        }
        else
        {
            //ne fait rien 
            //PERMET DE LIMITER L'EAU SI TROP DEAU OU PAS ASSEZ
        }
        return true;
    
    }
}
